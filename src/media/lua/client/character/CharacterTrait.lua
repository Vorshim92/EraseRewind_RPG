---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lele.
--- DateTime: 15/04/23 18:54
---

---@class CharacterTrait

local CharacterTrait = {}

require("lib/CharacterBaseObj")

local characterLib = require("CharacterLib")
local characterPz = require("lib/CharacterPZ")
local errHandler = require("lib/ErrHandler")
local pageBook = require("book/PageBook")
local modDataManager = require("lib/ModDataManager")


-- PATCH SKILL LIMITER
local isSkillLimiter = false
local SkillLimiter = {}
if getActivatedMods():contains("SkillLimiter_RPG_BETA") then
    isSkillLimiter = true
    SkillLimiter = require("SkillLimiter")
end
---@type string
local characterMaxSkillModData = "characterMaxSkill"


---Read Trait From Hd
---@return table - string
local function readTraitFromHd()
    return modDataManager.read(pageBook.Character.TRAITS)
end

--- **Create Trait**
---@param character IsoGameCharacter
--- - IsoGameCharacter : zombie.characters.IsoGameCharacter
function CharacterTrait.readBook(character)
    --- **Check if character is null**
    if not character then
        errHandler.errMsg("CharacterTrait.readBook(character)",
                errHandler.err.IS_NULL_CHARACTERS)
        return nil
        --- **Check if mod-data traits is exits**
    elseif not modDataManager.isExists(pageBook.Character.TRAITS) then
        errHandler.errMsg("CharacterTrait.readBook(character)",
                " mod-data " .. pageBook.Character.TRAITS .. " not exists")
        return nil
    end

    ---@type table - string
    ---@return string
    local traits = readTraitFromHd(character)

    if not traits then
        return nil
    end

    --- **Delete Traits**
    characterPz.removeAllTraits_PZ(character)

    for _, v in pairs(traits) do
        -- @param character IsoGameCharacter
        -- @param trait string
        characterPz.setTraitsPerk_PZ(character, v)
    end

        if isSkillLimiter and modDataManager.isExists(characterMaxSkillModData) then
        --- **Check if ModData exists**
            --- **Remove ModData**
            modDataManager.remove(characterMaxSkillModData)
            
            SkillLimiter.initCharacter()
            
        end
    
    


end

--- **Write Trait To Hd**
---@param character IsoGameCharacter
--- - IsoGameCharacter : zombie.characters.IsoGameCharacter
function CharacterTrait.writeBook(character)
    --- **Check if character is null**
    if not character then
        errHandler.errMsg("CharacterTrait.writeBook(character)",
                errHandler.err.IS_NULL_CHARACTERS)
        return nil
    end

    --- **Remove Traits form mod-data**
    modDataManager.remove(pageBook.Character.TRAITS)

    ---@type CharacterBaseObj
    local trait = characterLib.getTraitsPerk(character)

    --- **Save Traits to mod-data**
    modDataManager.save(pageBook.Character.TRAITS,
            trait:getTraits())
end

return CharacterTrait