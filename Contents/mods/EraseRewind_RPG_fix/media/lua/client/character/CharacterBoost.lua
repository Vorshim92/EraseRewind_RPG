---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lele.
--- DateTime: 15/04/23 18:54
---

---@class CharacterBoost

local CharacterBoost = {}

require("lib/CharacterBaseObj")

local characterLib = require("CharacterLib")
local characterPz = require("lib/CharacterPZ")
local debugDiagnostics = require("lib/DebugDiagnostics")
local errHandler = require("lib/ErrHandler")
-- local pageBook = require("book/PageBook")
local modDataManager = require("lib/ModDataManager")

--- **desperate Fix, XPBoost doesn't work well**
---@param character IsoGameCharacter
---@param perk PerkFactory.Perk
---@param xpBoost int
---@return void
--- - IsoGameCharacter : zombie.characters.IsoGameCharacter
--- - PerkFactory.Perk : zombie.characters.skills.PerkFactory.Perk
local function desperateFix(character, perk, xpBoost)
    for i = 0, 10 do
        if characterPz.getXPBoost(character, perk) ~= xpBoost then
            if i < 8 then
                characterPz.setXPBoost(character, perk, xpBoost)
                character = debugDiagnostics.characterUpdate()
            else
                for i = 1, 100000000 do

                end
                characterPz.setXPBoost(character, perk, xpBoost)
                character = debugDiagnostics.characterUpdate()
            end
        end
    end
end

-- @param perk PerkFactory.Perk
-- @param boostLevel int
local lines_ = {}

---@param perk PerkFactory.Perk
---@param xpBoost int
---@return table <PerkFactory.Perk, int>
--- - PerkFactory.Perk : zombie.characters.skills.PerkFactor
local function addLines(perk, xpBoost)
    table.insert(lines_, {
        ---@field PerkFactory.Perk
        perk = perk,

        ---@field int
        xpBoost = xpBoost
    })
end

--- **Read Boost From Hd**
---@return table perk, int
--- - PerkFactory.Perk : zombie.characters.skills.PerkFactory
local function readBoostFromHd(modData_name)
    return modDataManager.read(modData_name.BOOST)
end

--- **Delete Boost**
---@param character IsoGameCharacter
--- - IsoGameCharacter : zombie.characters.IsoGameCharacter
local function deleteBoost(character)
    -- @type CharacterBaseObj
    local CharacterAllPerksObJ = characterLib.getAllPerks(character)

    for _, v in pairs(CharacterAllPerksObJ:getPerkDetails()) do
        characterPz.removePerkBoost(character, v:getPerk())
    end
end

--- **Create Boost**
---@param character IsoGameCharacter
--- - IsoGameCharacter : zombie.characters.IsoGameCharacter
function CharacterBoost.readBook(character, modData_name)
    --- **Check if character is null**
    if not character then
        errHandler.errMsg("CharacterBoost.readBook(character)",
                errHandler.err.IS_NULL_CHARACTERS)
        return nil
    end

    --- **check if mod-data boost is exits**
    if not modDataManager.isExists(modData_name.BOOST) then
        errHandler.errMsg("CharacterBoost.readBook(character)",
                " mod-data " .. modData_name.BOOST .. " " .. errHandler.err.IS_NULL)
        return nil
    end

    ---@type table - PerkFactory.Perk, int boostLevel
    local boost = readBoostFromHd(modData_name)

    --- check if boost is nil
    if not boost then return nil end

    deleteBoost(character)

    -- **Set Boost**
    for _, v in pairs(boost) do
        characterPz.setXPBoost(character, v.perk, v.xpBoost)
        -- desperateFix(character, v.perk, v.xpBoost)
    end
end

--- **Write Trait To Hd**
---@param character IsoGameCharacter
--- - IsoGameCharacter : zombie.characters.IsoGameCharacter
--- - PerkFactory.Perk : zombie.characters.skills.PerkFactory
function CharacterBoost.writeBook(character, modData_name)
    --- **Check if character is null**
    if not character then
        errHandler.errMsg("CharacterBoost.writeBook(character)",
                errHandler.err.IS_NULL_CHARACTERS)
        return nil
    end

    modDataManager.remove(modData_name.BOOST)

    -- @type CharacterBaseObj
    local CharacterPerksBoostObj = characterLib.getPerksBoost(character)

    for _, v in pairs(CharacterPerksBoostObj:getPerkDetails()) do 
        -- @param PerkFactory.Perk
        -- @param BoostLevel int
        addLines(v:getPerk(), v:getXPBoost())
    end

    --- **Save Boost to mod-data**
    modDataManager.save(modData_name.BOOST, lines_)
    -- save backup on server
    local args = {
        name = modData_name.BOOST,
        data = lines_
    }
    sendClientCommand(character, "Vorshim", "saveBackup", args)
    -- -- end backup on server
    lines_ = {}

end

return CharacterBoost