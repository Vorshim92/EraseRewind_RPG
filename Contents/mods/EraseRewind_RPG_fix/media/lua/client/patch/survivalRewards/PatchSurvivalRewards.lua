---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lele.
--- DateTime: 27/06/23 10:28
---

---@class PatchSurvivalRewards

local PatchSurvivalRewards = {}

local errHandler = require("lib/ErrHandler")
local modDataManager = require("lib/ModDataManager")

local kilMilReached = "kilMilReachedX"
local milReached = "milReachedX"

--- **Read kilMilReached From Hd
local function readKilMilReachedFromHd()
    return modDataManager.read(kilMilReached)
end

--- **Read MilReached From Hd**
local function readMilReachedFromHd()
    return modDataManager.read(milReached)
end

--- **Write kilMilReached From Hd**
---@param character IsoGameCharacter
--- - IsoGameCharacter : zombie.characters.IsoGameCharacter
local function writeKilMilReachedToFromHd(character)
    if not character then
        errHandler.errMsg("PatchSurvivalRewards.writeKilMilReachedToFromHd(character)",
                " character is nil")
        return nil
    end

    ---@type table
    local lines = {}
    table.insert(lines, character:getModData().milReached)
    modDataManager.save(kilMilReached, lines)
end

--- **Write milReached From Hd**
---@param character IsoGameCharacter
--- - IsoGameCharacter : zombie.characters.IsoGameCharacter
local function writeMilReachedFromHd(character)
    --- **Check if character is null**
    if not character then
        errHandler.errMsg("PatchSurvivalRewards.writeMilReachedFromHd(character)",
                " character is nil")
        return nil
    end

    ---@type table
    local lines = {}
    table.insert(lines, character:getModData().kilMilReached)
    modDataManager.save(milReached, lines )
end

--- **Create Mil_kill_Reached**
---@param character IsoGameCharacter
--- - IsoGameCharacter : zombie.characters.IsoGameCharacter
function PatchSurvivalRewards.createMil_kill_Reached(character)
    --- **Check if character is null**
    if not character then
        errHandler.errMsg("PatchSurvivalRewards.createMil_kill_Reached(character)",
                errHandler.err.IS_NULL_CHARACTERS)
        return nil
        --- **is Exit kilMilReached**
    elseif not modDataManager.isExists(kilMilReached) then
        errHandler.errMsg("PatchSurvivalRewards.createMil_kill_Reached(character)",
                " mod-data " .. kilMilReached .. " not exists")
        return nil
    end

    ---@type table
    local kilMilReaches = readKilMilReachedFromHd()

    for _, v in pairs(kilMilReaches) do
        character:getModData().milReached = toInt(v)
    end

    --- **is Exit milReached**
    if not modDataManager.isExists(milReached) then
        errHandler.errMsg("PatchSurvivalRewards.createMil_kill_Reached(character)",
                " mod-data " .. milReached .. " not exists")
        return nil
    end

    ---@type table
    local milReaches = readMilReachedFromHd()

    for _, v in pairs(milReaches) do
        character:getModData().kilMilReached = toInt(v)
    end
end

--- **Write Mil_kill_Reached**
---@param character IsoGameCharacter
--- - IsoGameCharacter : zombie.characters.IsoGameCharacter
function PatchSurvivalRewards.writeMil_kill_ReachedToHd(character)
    --- **Check if character is null**
    if not character then
        errHandler.errMsg("PatchSurvivalRewards.writeMil_kill_ReachedToHd(character)",
                " character is nil")
        return nil
    end

    --- **Remove Mil_kill_Reached**
    PatchSurvivalRewards.removeMil_kill_Reached()

    --- **Save Mil_kill_/Mil Reached to mod-data**
    writeKilMilReachedToFromHd(character)
    writeMilReachedFromHd(character)
end

--- **Remove Mil_kill_Reached**
function PatchSurvivalRewards.removeMil_kill_Reached()
    modDataManager.remove(kilMilReached)
    modDataManager.remove(milReached)
end

--- **Is Mod Active**
---@return boolean
function PatchSurvivalRewards.isModActive()
    ---@type string
    local activeMod = "SurvivalRewards"

    ---@type List - string
    local activeMods = getActivatedMods();

    for i = 0, activeMods:size() - 1 do
        if activeMods:get(i) == activeMod then
            return true
        end
    end

    return false
end

return PatchSurvivalRewards